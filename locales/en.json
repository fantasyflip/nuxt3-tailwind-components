{
  "lang": "en",
  "layouts": {
    "component": {
      "meta": {
        "title": "{componentName}",
        "description": "Overview over the {componentName} component.",
        "hash-description": "Overview over the {componentName} component. Learn more about the {hash} property.",
        "og": {
          "title": "{componentName} | Component Flip",
          "locale": "en_US"
        }
      },
      "content": {
        "playground": "Playground",
        "properties": "Properties"
      }
    }
  },
  "pages": {
    "component": {
      "button": {
        "content": {
          "properties": {
            "color": {
              "description": "Prop to set the color of the button.<br>You can seperately set the background, text, border and hover color.<br>If the 'outlined' prop is set, only the border and the text color will be used.<br>If the 'disabled' or 'loading' prop is set, the opacity will be set to 50% and the hover color will no longer take effect.<br>If the 'icon' prop is set, only the text & hover color will take effect."
            },
            "rounded": {
              "description": "Prop to set the border radius of the button. The default value can be toggled by just setting the prop or disabled by setting it to 'false'.<br>To set a special value set it to a tailwind 'rounded'-class."
            },
            "grow": {
              "description": "Prop to apply a grow effect to the button. The delay and scale can be set seperately.<br>To apply the effect on hover prefix the tailwind 'scale'-class with 'hover:'."
            },
            "link": {
              "description": "Prop to make the button a link. You either can set a complete link or provide a link object as you would on the 'NuxtLink'-component in the 'to' prop."
            },
            "target": {
              "description": "Prop to set the target of the link. Only applied when the 'link' prop is set."
            },
            "disabled": {
              "description": "Prop to set the button to disabled. When disabled the opacity will be set to 50% and the hover color will no longer take effect.<br>The button won't be clickable anymore.<br>Also the grow effect no longer takes effect."
            },
            "icon": {
              "description": "Prop to set the button to an icon button. If set to true only the text and hover color will take effect."
            },
            "loading": {
              "description": "Prop to set the button to loading. When loading the opacity will be set to 50% and the hover color will no longer take effect.<br>The button won't be clickable anymore.<br>Also the grow effect no longer takes effect. A loading spinner will be displayed instead of the button content."
            },
            "outlined": {
              "description": "Prop to set the button to outlined. When set to true the border will be set to the default-value.<br>If provided with a tailwind 'border'-class the border-width can be set.<br>The background color will be transparent.<br>Also the hover color will no longer take effect. Instead the border and text color will be applied."
            },
            "shadow": {
              "description": "Prop to add a shadow to the button. The default value can be toggled by just setting the prop or disabled by setting it to 'false'. To set a special value set it to a tailwind 'shadow'-class."
            },
            "transition": {
              "description": "Prop to set the transition settings of the button, that will take effect on hover-color-change and the grow prop.<br>When set to 'false' no transition will be applied.<br>When set to 'true' the default transition will be applied.<br>When set to an object you can set the 'duration' and 'timing-function' seperately."
            },
            "dense": {
              "description": "Prop to set the button to dense. When set to true the padding will be reduced and the text will be set to small."
            },
            "width": {
              "description": "Prop to set the width of the button. You can set it to a tailwind 'w'-class."
            },
            "height": {
              "description": "Prop to set the height of the button. You can set it to a tailwind 'h'-class."
            }
          }
        }
      }
    },
    "404": {
      "meta": {
        "title": "404",
        "description": "Page not found!",
        "og": {
          "title": "404 - Page not found | Component Flip",
          "locale": "en_US"
        }
      },
      "content": {
        "errorMessage": "Shit happens! This site doesn't exist.",
        "urlDisplay": "You tried to access <a class='text-primary hover:text-secondary' href='{path}'>{path}</a>."
      },
      "buttons": {
        "home": "Back Home"
      }
    },
    "index": {
      "meta": {
        "title": "Home",
        "description": "A Collection of Nuxt 3 Components powered by TailwindCSS",
        "og": {
          "title": "Home | Component Flip",
          "locale": "en_US"
        }
      },
      "content": {
        "hello": "Hello, {name}!"
      }
    },
    "fallbackIndex": {
      "meta": {
        "title": "Oops",
        "description": "We coudn't detect your language.",
        "og": {
          "title": "Oops - Language not found | Component Flip",
          "locale": "en_US"
        }
      },
      "content": {
        "oops": "Oops",
        "errorMessage": "We coudn't detect your language. Please select one."
      },
      "buttons": {
        "english": "English",
        "german": "German"
      }
    }
  }
}
